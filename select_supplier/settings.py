"""
Django settings for select_supplier project.

Generated by 'django-admin startproject' using Django 5.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
from .prod_settings import *


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.humanize",
    'django.contrib.postgres',

    # third party
    "import_export",
    "django_bootstrap5",
    "crispy_forms",
    "captcha",
    "celery",
    "django_celery_beat",
    "rest_framework",
    'tinymce',
    
    # myapp
    "primary.apps.PrimaryConfig",
    "supplier.apps.SupplierConfig",
    "delivery.apps.DeliveryConfig",
    "customs.apps.CustomsConfig",
    "bank_clearing.apps.BankClearingConfig",
    "cost_comparison.apps.CostComparisonConfig",
    "analytic.apps.AnalyticConfig",
    "users.apps.UsersConfig",
    "customer_account.apps.СustomerAccountConfig",
    "contact.apps.ContactConfig",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "select_supplier.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "select_supplier.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "Ru-ru"

TIME_ZONE = "Europe/Moscow"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"
MEDIA_URL = "media/"


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"




CRISPY_TEMPLATE_PACK = "bootstrap5"  # или 'bootstrap5', в зависимости от вашей версии



# CAPTCHA_CHALLENGE_FUNCT = 'captcha.helpers.math_challenge'
# CAPTCHA_CHALLENGE_FUNCT = 'captcha.helpers.random_char_challenge'
CAPTCHA_CHALLENGE_FUNCT = 'captcha.helpers.word_challenge'


# Настройки Celery
CELERY_IMPORTS = ('customer_account.tasks',)

# set the celery broker url
CELERY_BROKER_URL = 'redis://localhost:6379/0'

# set the celery result backend
CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'

CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TASK_DEFAULT_QUEUE = 'emails'

# set the celery timezone
CELERY_TIMEZONE = 'UTC'

# Дополнительные настройки

# EMAIL_LOGS_DIR = os.path.join(BASE_DIR, 'email_logs')

# CELERY_TASK_DEFAULT_QUEUE = 'default'
CELERY_TASK_QUEUES = {
    'default': {
        'exchange': 'default',
        'routing_key': 'default',
    },
    'emails': {
        'exchange': 'emails',
        'routing_key': 'emails',
    },
}
CELERY_TASK_DEFAULT_EXCHANGE = 'default'
CELERY_TASK_DEFAULT_EXCHANGE_TYPE = 'direct'
CELERY_TASK_DEFAULT_ROUTING_KEY = 'default'

# Для обработки очень больших рассылок (100k+ писем) добавьте:
# Оптимизация Celery
CELERY_WORKER_PREFETCH_MULTIPLIER = 1  # Забирать по 1 задаче за раз
CELERY_WORKER_MAX_TASKS_PER_CHILD = 100  # Перезапуск воркера после 100 задач
CELERY_BROKER_POOL_LIMIT = None  # Без ограничения соединений
CELERY_BROKER_CONNECTION_TIMEOUT = 30  # Таймаут соединения
# Оптимизация Django
DATA_UPLOAD_MAX_NUMBER_FIELDS = 10000  # Для больших форм